@cubic-bezier: cubic-bezier(.4, 0, .49, 1);

.frame {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 400px;
    height: 400px;
    margin-top: -200px;
    margin-left: -200px;
    border-radius: 2px;
    box-shadow: 1px 2px 10px 0px rgba(0, 0, 0, 0.3);
    background: #272C34;
    color: #fff;
}

.center {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.circle {
    position: relative;
    overflow: hidden;
    // 这段 less 代码表示将一个圆形剪切路径应用于元素，其半径为 90 像素，圆心位于 (90px，90px) 的位置。这意味着元素的内容将只显示在圆形区域内，并被剪切在该圆形路径之外的部分将被移除。这通常用于创建有趣的视觉效果或蒙版效果。 
    clip-path: circle(90px at 90px 90px);
    width: 180px;
    height: 180px;
    border-radius: 50%;

    .sky {
        position: absolute;
        z-index: 0;
        top: 0;
        left: 0;
        right: 0;
        height: 124px;
        background: #7DDFFC;
        //infinite反复
        animation: sky-turns-black 4s @cubic-bezier infinite;
    }

    .sun {
        position: absolute;
        z-index: 2;
        top: 7px;
        left: 73px;
        width: 34px;
        height: 34px;
        border-radius: 50%;
        background: #FFEF00;
        // 这段 less 代码表示元素进行转换时的变换原点（transform origin）被设置为相对于元素的宽度和高度分别为 50% 和 400% 的位置。这意味着将使用该点作为变换的中心点，而不是默认的中心点（元素的中心点）。具体来说，将在距离元素顶部 4 倍高度处的水平中心点进行变换。这通常用于实现旋转、缩放等操作，从而使变换效果更精确或更具有视觉吸引力
        transform-origin: 50% 400%;
        animation: sun-goes-down 4s @cubic-bezier infinite;
    }

    .side-left {
        position: absolute;
        top: 67px;
        left: 35px;
        height: 57px;
        width: 116px;
        background: #F4F4F4;
        //三角形剪裁
        clip-path: polygon(0% 100%, 100% 100%, 50% 0%);
        animation: pyramide-shading 4s @cubic-bezier infinite;
    }

    .side-right {
        position: absolute;
        top: 67px;
        left: 93px;
        height: 57px;
        width: 58px;
        background: #DDDADA;
        clip-path: polygon(30% 100%, 100% 100%, 0% 0%);
        animation: pyramide-shading 4s @cubic-bezier infinite reverse;
    }

    .shadow {
        position: absolute;
        z-index: 2;
        top: 124px;
        left: -80px;
        height: 30px;
        width: 360px;
        background: rgba(0, 0, 0, 0.2);
        transform-origin: 50% 0%;
        clip-path: polygon(115px 0%, 231px 0%, 80% 100%);
        animation: shadow-on-the-floor 4s @cubic-bezier infinite;
    }

    .ground {
        position: absolute;
        z-index: 1;
        bottom: 0;
        left: 0;
        right: 0;
        height: 56px;
        background: #F0DE75;
        animation: fading-sand 4s @cubic-bezier infinite;
    }
}

@keyframes sun-goes-down {
    0% {
        background: #F57209;
        transform: rotate(-70deg);
    }

    30% {
        background: #FFEF00;
        transform: rotate(-28deg);
    }

    70% {
        background: #FFEF00;
    }

    100% {
        background: #F57209;
        transform: rotate(70deg);
    }
}

@keyframes sky-turns-black {
    0% {
        background: #272C34;
    }

    30% {
        background: #7DDFFC;
    }

    70% {
        background: #7DDFFC;
    }

    100% {
        background: #272C34;
    }
}

@keyframes pyramide-shading {
    0% {
        background: #272C34;
    }

    30% {
        background: #F4F4F4;
    }

    70% {
        background: #DDDADA;
    }

    100% {
        background: #272C34;
    }
}

@keyframes shadow-on-the-floor {
    // 这段 less 代码表示在关键帧动画的第 0% 时刻，
    // 元素将会被应用一个 scaleY(0) 的变换，
    // 并且一个多边形的剪切路径将会被应用。 
    // 具体来说，scaleY(0) 表示元素在 y 轴方向上被压缩到 0，
    // 即变成一条水平的线。
    // clip-path: polygon(115px 0%, 231px 0%, 100% 100%) 
    // 表示将使用一个三角形剪切路径来裁剪元素，这个三角形的顶点分别在
    //  (115px, 0%)，(231px, 0%) 和 (100%, 100%) 的位置。这将导致元素
    //  只显示三角形区域内的内容，而区域外的部分将被裁剪掉。
    //  这种技术通常用于创建动画效果，比如元素出现或消失的效果，
    //  或者创建类似遮罩层的效果。
    0% {
        transform: scaleY(0);
        clip-path: polygon(115px 0%, 231px 0%, 100% 100%);
    }

    30% {
        transform: scaleY(1);
        clip-path: polygon(115px 0%, 231px 0%, 80% 100%);
    }

    55% {
        transform: scaleY(.4);
    }

    75% {
        transform: scaleY(1);
    }

    100% {
        transform: scaleY(0);
        clip-path: polygon(115px 0%, 231px 0%, 0% 100%);
    }
}

@keyframes fading-sand {
    0% {
        background: #272C34;
    }

    30% {
        background: #F0DE75;
    }

    70% {
        background: #F0DE75;
    }

    100% {
        background: #272C34;
    }
}